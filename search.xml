<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JavaScript要点</title>
    <url>/2021/10/07/JavaScript%E8%A6%81%E7%82%B9/</url>
    <content><![CDATA[<h2 id="JavaScript的应用方式："><a href="#JavaScript的应用方式：" class="headerlink" title="JavaScript的应用方式："></a>JavaScript的应用方式：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">        alert(<span class="string">&quot;浏览器警示语!&quot;</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;1.js&quot;</span>&gt;&lt;/script&gt;<span class="comment">//(标签引入单独的js文件)</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="JavaScript与Java在语法方面的区别："><a href="#JavaScript与Java在语法方面的区别：" class="headerlink" title="JavaScript与Java在语法方面的区别："></a>JavaScript与Java在语法方面的区别：</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><img src="/2021/10/07/JavaScript%E8%A6%81%E7%82%B9/Image1.png" class>

<h3 id="比较运算"><a href="#比较运算" class="headerlink" title="比较运算"></a>比较运算</h3><p>等于： == 等于是简单的做字面值的比较   </p>
<p>全等于： === 除了做字面值的比较之外，还会比较两个变量的数据类型</p>
<h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><img src="/2021/10/07/JavaScript%E8%A6%81%E7%82%B9/Image2.png" class>

<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>JS 中数组的定义：</p>
<p>​    var 数组名= []; // 空数组</p>
<p>​    var 数组名= [1 , ’abc’ , true]; // 定义数组同时赋值元素</p>
<p>JavaScript 语言中的数组，只要我们通过数组下标赋值，那么如果超过最大的下标值，就会自动的给数组做扩容操作。</p>
<h2 id="JavaScript中的函数和事件-重点-："><a href="#JavaScript中的函数和事件-重点-：" class="headerlink" title="JavaScript中的函数和事件(重点)："></a>JavaScript中的函数和事件(重点)：</h2><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="JavaScript中的函数定义方式："><a href="#JavaScript中的函数定义方式：" class="headerlink" title="JavaScript中的函数定义方式："></a>JavaScript中的函数定义方式：</h4><p>（1）function 函数名(形参列表){函数体}<br>ex:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">function <span class="title">fun2</span><span class="params">(a ,b)</span></span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;有参函数fun2()被调用了a=&gt;&quot;</span> + a + <span class="string">&quot;,b=&gt;&quot;</span>+b);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>（2）var 函数名= function(形参列表) { 函数体}<br>ex:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun2 = function (a,b)&#123;</span><br><span class="line">    alert(<span class="string">&quot;有参函数a=&quot;</span> + a + <span class="string">&quot;,b=&quot;</span> + b);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="在JavaScript-语言中，如何定义带有返回值的函数？"><a href="#在JavaScript-语言中，如何定义带有返回值的函数？" class="headerlink" title="在JavaScript 语言中，如何定义带有返回值的函数？"></a>在JavaScript 语言中，如何定义带有返回值的函数？</h4><p>​    只需要在函数体内直接使用return 语句返回值即可！</p>
<p>ex:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun3 = function (num1,num2) &#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">  &#125;</span><br><span class="line">    alert( fun3(<span class="number">100</span>,<span class="number">200</span>) );</span><br></pre></td></tr></table></figure>

<p><strong>注：在Java 中函数允许重载。但是在JS 中函数的重载会直接覆盖掉上一次的定义。</strong></p>
<h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><h4 id="常用的事件："><a href="#常用的事件：" class="headerlink" title="常用的事件："></a>常用的事件：</h4><p>​    onload 加载完成事件： 页面加载完成之后，常用于做页面js 代码初始化操作<br>​    onclick 单击事件： 常用于按钮的点击响应操作。<br>​    onblur 失去焦点事件： 常用用于输入框失去焦点后验证其输入内容是否合法。<br>​    onchange 内容发生改变事件： 常用于下拉列表和输入框内容发生改变后操作<br>​    onsubmit 表单提交事件： 常用于表单提交前，验证所有表单项是否合法。</p>
<h4 id="事件的注册-绑定-："><a href="#事件的注册-绑定-：" class="headerlink" title="事件的注册(绑定)："></a>事件的注册(绑定)：</h4><p><strong>静态注册：</strong><br>ex: onclick事件绑定</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">onclickFun</span><span class="params">()</span> </span>&#123;</span><br><span class="line">alert(<span class="string">&quot;静态注册onclick 事件&quot;</span>);</span><br><span class="line">&#125;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--静态注册onClick 事件--&gt;</span><br><span class="line">&lt;button onclick=<span class="string">&quot;onclickFun();&quot;</span>&gt;按钮<span class="number">1</span>&lt;/button&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

<p><strong>动态注册：</strong><br>ex: onclick事件绑定</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">window.onload = function () &#123;</span><br><span class="line"><span class="keyword">var</span> btnObj = document.getElementById(<span class="string">&quot;btn01&quot;</span>);</span><br><span class="line">btnObj.onclick = function () &#123;</span><br><span class="line">alert(<span class="string">&quot;动态注册的onclick 事件&quot;</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;button id=<span class="string">&quot;btn01&quot;</span>&gt;按钮<span class="number">2</span>&lt;/button&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>eclipse keys</title>
    <url>/2021/09/26/eclipse-keys/</url>
    <content><![CDATA[<p>Eclipse快捷键：</p>
<span id="more"></span>



<img src="/2021/09/26/eclipse-keys/Image1.png" class>

<img src="/2021/09/26/eclipse-keys/Image2.png" class>

]]></content>
  </entry>
  <entry>
    <title>表单重复提交和解决方式</title>
    <url>/2021/09/28/%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="一、表单重复提交"><a href="#一、表单重复提交" class="headerlink" title="一、表单重复提交"></a>一、表单重复提交</h2><p>三种常见情况：</p>
<ol>
<li><p>提交完表单，服务器采用请求转发来进行页面跳转，这个时候用户按下功能键F5，就会发起最后一次的请求，造成表单重复提交问题。解决方法：通过请求重定向来进行跳转。</p>
<span id="more"></span></li>
<li><p>用户正常提交服务器，但是由于网络延迟等原因，迟迟未收到服务器的响应，这个时候，用户以为提交失败，就会着急，然后多点了几次提交操作，也会造成表单重复提交。</p>
</li>
<li><p>用户正常提交服务器，服务器也没有延迟，但是提交完成后，用户回退浏览器，重新提交，也会造成表单重复提交。</p>
</li>
</ol>
<p><strong>通用最佳解决方法：使用验证码。</strong></p>
<h2 id="二、验证码使用"><a href="#二、验证码使用" class="headerlink" title="二、验证码使用"></a>二、验证码使用</h2><ol>
<li>导入谷歌验证码jar包:kaptcha-{version}.jar</li>
<li>在web.xml中去配置用于生成验证码的servlet程序 (servlet类在Jar包中，路径名改为JPG格式，便于理解调用)</li>
<li>获取Session中的验证码</li>
<li>删除Session中的验证码</li>
<li>获取请求的参数</li>
<li>检查验证码是否正确</li>
<li>为验证码图片绑定单击事件，刷新验证码，同时为了避免浏览器缓存图片，在地址后➕一个时间戳（”?d=”+new Date()）</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/09/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
